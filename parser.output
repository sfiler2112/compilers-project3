Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';'

    3 optional_variable: variable_
    4                  | %empty

    5 variable_: variable
    6          | variable_ variable

    7 variable: IDENTIFIER ':' type IS statement_

    8 optional_parameters: parameter_
    9                    | %empty

   10 parameter_: parameter
   11           | parameter_ ',' parameter

   12 parameter: IDENTIFIER ':' type

   13 type: INTEGER
   14     | REAL
   15     | BOOLEAN

   16 body: BEGIN_ statement_ END ';'

   17 statement_: statement ';'
   18           | error ';'

   19 statement: expression
   20          | reduce_statement
   21          | if_statement
   22          | case_statement

   23 case_statement: CASE expression IS case_ OTHERS ARROW statement_ ENDCASE

   24 if_statement: IF expression THEN statement_ ELSE statement_ ENDIF

   25 reduce_statement: REDUCE operator optional_reductions ENDREDUCE

   26 case_: case_ case
   27      | %empty

   28 case: WHEN INT_LITERAL ARROW statement_

   29 operator: ADDOP
   30         | MULOP

   31 optional_reductions: reductions
   32                    | %empty

   33 reductions: statement_
   34           | reductions statement_

   35 expression: expression OROP and_expression
   36           | and_expression

   37 and_expression: and_expression ANDOP relation
   38               | relation

   39 relation: relation RELOP term
   40         | term

   41 term: term ADDOP factor
   42     | factor

   43 factor: factor MULOP exponent
   44       | factor REMOP exponent
   45       | exponent

   46 exponent: primary EXPOP exponent
   47         | primary

   48 primary: '(' expression ')'
   49        | NOTOP primary
   50        | INT_LITERAL
   51        | REAL_LITERAL
   52        | BOOL_LITERAL
   53        | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 48
')' (41) 48
',' (44) 11
':' (58) 7 12
';' (59) 2 16 17 18
error (256) 18
IDENTIFIER (258) 2 7 12 53
REAL_LITERAL (259) 51
BOOL_LITERAL (260) 52
INT_LITERAL (261) 28 50
ADDOP (262) 29 41
MULOP (263) 30 43
RELOP (264) 39
REMOP (265) 44
EXPOP (266) 46
ANDOP (267) 37
OROP (268) 35
NOTOP (269) 49
ARROW (270) 23 28
BEGIN_ (271) 16
BOOLEAN (272) 15
END (273) 16
ENDREDUCE (274) 25
FUNCTION (275) 2
INTEGER (276) 13
IS (277) 7 23
REDUCE (278) 25
RETURNS (279) 2
THEN (280) 24
WHEN (281) 28
REAL (282) 14
OTHERS (283) 23
IF (284) 24
ENDIF (285) 24
CASE (286) 23
ENDCASE (287) 23
ELSE (288) 24


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
function (40)
    on left: 1, on right: 0
function_header (41)
    on left: 2, on right: 1
optional_variable (42)
    on left: 3 4, on right: 1
variable_ (43)
    on left: 5 6, on right: 3 6
variable (44)
    on left: 7, on right: 5 6
optional_parameters (45)
    on left: 8 9, on right: 2
parameter_ (46)
    on left: 10 11, on right: 8 11
parameter (47)
    on left: 12, on right: 10 11
type (48)
    on left: 13 14 15, on right: 2 7 12
body (49)
    on left: 16, on right: 1
statement_ (50)
    on left: 17 18, on right: 7 16 23 24 28 33 34
statement (51)
    on left: 19 20 21 22, on right: 17
case_statement (52)
    on left: 23, on right: 22
if_statement (53)
    on left: 24, on right: 21
reduce_statement (54)
    on left: 25, on right: 20
case_ (55)
    on left: 26 27, on right: 23 26
case (56)
    on left: 28, on right: 26
operator (57)
    on left: 29 30, on right: 25
optional_reductions (58)
    on left: 31 32, on right: 25
reductions (59)
    on left: 33 34, on right: 31 34
expression (60)
    on left: 35 36, on right: 19 23 24 35 48
and_expression (61)
    on left: 37 38, on right: 35 36 37
relation (62)
    on left: 39 40, on right: 37 38 39
term (63)
    on left: 41 42, on right: 39 40 41
factor (64)
    on left: 43 44 45, on right: 41 42 43 44
exponent (65)
    on left: 46 47, on right: 43 44 45 46
primary (66)
    on left: 48 49 50 51 52 53, on right: 46 47 49


State 0

    0 $accept: . function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION . IDENTIFIER optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function . $end

    $end  shift, and go to state 5


State 3

    1 function: function_header . optional_variable body

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 4 (optional_variable)

    optional_variable  go to state 7
    variable_          go to state 8
    variable           go to state 9


State 4

    2 function_header: FUNCTION IDENTIFIER . optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 9 (optional_parameters)

    optional_parameters  go to state 11
    parameter_           go to state 12
    parameter            go to state 13


State 5

    0 $accept: function $end .

    $default  accept


State 6

    7 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 14


State 7

    1 function: function_header optional_variable . body

    BEGIN_  shift, and go to state 15

    body  go to state 16


State 8

    3 optional_variable: variable_ .
    6 variable_: variable_ . variable

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 3 (optional_variable)

    variable  go to state 17


State 9

    5 variable_: variable .

    $default  reduce using rule 5 (variable_)


State 10

   12 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 18


State 11

    2 function_header: FUNCTION IDENTIFIER optional_parameters . RETURNS type ';'

    RETURNS  shift, and go to state 19


State 12

    8 optional_parameters: parameter_ .
   11 parameter_: parameter_ . ',' parameter

    ','  shift, and go to state 20

    $default  reduce using rule 8 (optional_parameters)


State 13

   10 parameter_: parameter .

    $default  reduce using rule 10 (parameter_)


State 14

    7 variable: IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 21
    INTEGER  shift, and go to state 22
    REAL     shift, and go to state 23

    type  go to state 24


State 15

   16 body: BEGIN_ . statement_ END ';'

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    NOTOP         shift, and go to state 30
    REDUCE        shift, and go to state 31
    IF            shift, and go to state 32
    CASE          shift, and go to state 33
    '('           shift, and go to state 34

    statement_        go to state 35
    statement         go to state 36
    case_statement    go to state 37
    if_statement      go to state 38
    reduce_statement  go to state 39
    expression        go to state 40
    and_expression    go to state 41
    relation          go to state 42
    term              go to state 43
    factor            go to state 44
    exponent          go to state 45
    primary           go to state 46


State 16

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


State 17

    6 variable_: variable_ variable .

    $default  reduce using rule 6 (variable_)


State 18

   12 parameter: IDENTIFIER ':' . type

    BOOLEAN  shift, and go to state 21
    INTEGER  shift, and go to state 22
    REAL     shift, and go to state 23

    type  go to state 47


State 19

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS . type ';'

    BOOLEAN  shift, and go to state 21
    INTEGER  shift, and go to state 22
    REAL     shift, and go to state 23

    type  go to state 48


State 20

   11 parameter_: parameter_ ',' . parameter

    IDENTIFIER  shift, and go to state 10

    parameter  go to state 49


State 21

   15 type: BOOLEAN .

    $default  reduce using rule 15 (type)


State 22

   13 type: INTEGER .

    $default  reduce using rule 13 (type)


State 23

   14 type: REAL .

    $default  reduce using rule 14 (type)


State 24

    7 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 50


State 25

   18 statement_: error . ';'

    ';'  shift, and go to state 51


State 26

   53 primary: IDENTIFIER .

    $default  reduce using rule 53 (primary)


State 27

   51 primary: REAL_LITERAL .

    $default  reduce using rule 51 (primary)


State 28

   52 primary: BOOL_LITERAL .

    $default  reduce using rule 52 (primary)


State 29

   50 primary: INT_LITERAL .

    $default  reduce using rule 50 (primary)


State 30

   49 primary: NOTOP . primary

    IDENTIFIER    shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    primary  go to state 52


State 31

   25 reduce_statement: REDUCE . operator optional_reductions ENDREDUCE

    ADDOP  shift, and go to state 53
    MULOP  shift, and go to state 54

    operator  go to state 55


State 32

   24 if_statement: IF . expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    expression      go to state 56
    and_expression  go to state 41
    relation        go to state 42
    term            go to state 43
    factor          go to state 44
    exponent        go to state 45
    primary         go to state 46


State 33

   23 case_statement: CASE . expression IS case_ OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    expression      go to state 57
    and_expression  go to state 41
    relation        go to state 42
    term            go to state 43
    factor          go to state 44
    exponent        go to state 45
    primary         go to state 46


State 34

   48 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    expression      go to state 58
    and_expression  go to state 41
    relation        go to state 42
    term            go to state 43
    factor          go to state 44
    exponent        go to state 45
    primary         go to state 46


State 35

   16 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 59


State 36

   17 statement_: statement . ';'

    ';'  shift, and go to state 60


State 37

   22 statement: case_statement .

    $default  reduce using rule 22 (statement)


State 38

   21 statement: if_statement .

    $default  reduce using rule 21 (statement)


State 39

   20 statement: reduce_statement .

    $default  reduce using rule 20 (statement)


State 40

   19 statement: expression .
   35 expression: expression . OROP and_expression

    OROP  shift, and go to state 61

    $default  reduce using rule 19 (statement)


State 41

   36 expression: and_expression .
   37 and_expression: and_expression . ANDOP relation

    ANDOP  shift, and go to state 62

    $default  reduce using rule 36 (expression)


State 42

   38 and_expression: relation .
   39 relation: relation . RELOP term

    RELOP  shift, and go to state 63

    $default  reduce using rule 38 (and_expression)


State 43

   40 relation: term .
   41 term: term . ADDOP factor

    ADDOP  shift, and go to state 64

    $default  reduce using rule 40 (relation)


State 44

   42 term: factor .
   43 factor: factor . MULOP exponent
   44       | factor . REMOP exponent

    MULOP  shift, and go to state 65
    REMOP  shift, and go to state 66

    $default  reduce using rule 42 (term)


State 45

   45 factor: exponent .

    $default  reduce using rule 45 (factor)


State 46

   46 exponent: primary . EXPOP exponent
   47         | primary .

    EXPOP  shift, and go to state 67

    $default  reduce using rule 47 (exponent)


State 47

   12 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 12 (parameter)


State 48

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type . ';'

    ';'  shift, and go to state 68


State 49

   11 parameter_: parameter_ ',' parameter .

    $default  reduce using rule 11 (parameter_)


State 50

    7 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    NOTOP         shift, and go to state 30
    REDUCE        shift, and go to state 31
    IF            shift, and go to state 32
    CASE          shift, and go to state 33
    '('           shift, and go to state 34

    statement_        go to state 69
    statement         go to state 36
    case_statement    go to state 37
    if_statement      go to state 38
    reduce_statement  go to state 39
    expression        go to state 40
    and_expression    go to state 41
    relation          go to state 42
    term              go to state 43
    factor            go to state 44
    exponent          go to state 45
    primary           go to state 46


State 51

   18 statement_: error ';' .

    $default  reduce using rule 18 (statement_)


State 52

   49 primary: NOTOP primary .

    $default  reduce using rule 49 (primary)


State 53

   29 operator: ADDOP .

    $default  reduce using rule 29 (operator)


State 54

   30 operator: MULOP .

    $default  reduce using rule 30 (operator)


State 55

   25 reduce_statement: REDUCE operator . optional_reductions ENDREDUCE

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    NOTOP         shift, and go to state 30
    REDUCE        shift, and go to state 31
    IF            shift, and go to state 32
    CASE          shift, and go to state 33
    '('           shift, and go to state 34

    ENDREDUCE  reduce using rule 32 (optional_reductions)

    statement_           go to state 70
    statement            go to state 36
    case_statement       go to state 37
    if_statement         go to state 38
    reduce_statement     go to state 39
    optional_reductions  go to state 71
    reductions           go to state 72
    expression           go to state 40
    and_expression       go to state 41
    relation             go to state 42
    term                 go to state 43
    factor               go to state 44
    exponent             go to state 45
    primary              go to state 46


State 56

   24 if_statement: IF expression . THEN statement_ ELSE statement_ ENDIF
   35 expression: expression . OROP and_expression

    OROP  shift, and go to state 61
    THEN  shift, and go to state 73


State 57

   23 case_statement: CASE expression . IS case_ OTHERS ARROW statement_ ENDCASE
   35 expression: expression . OROP and_expression

    OROP  shift, and go to state 61
    IS    shift, and go to state 74


State 58

   35 expression: expression . OROP and_expression
   48 primary: '(' expression . ')'

    OROP  shift, and go to state 61
    ')'   shift, and go to state 75


State 59

   16 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 76


State 60

   17 statement_: statement ';' .

    $default  reduce using rule 17 (statement_)


State 61

   35 expression: expression OROP . and_expression

    IDENTIFIER    shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    and_expression  go to state 77
    relation        go to state 42
    term            go to state 43
    factor          go to state 44
    exponent        go to state 45
    primary         go to state 46


State 62

   37 and_expression: and_expression ANDOP . relation

    IDENTIFIER    shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    relation  go to state 78
    term      go to state 43
    factor    go to state 44
    exponent  go to state 45
    primary   go to state 46


State 63

   39 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    term      go to state 79
    factor    go to state 44
    exponent  go to state 45
    primary   go to state 46


State 64

   41 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    factor    go to state 80
    exponent  go to state 45
    primary   go to state 46


State 65

   43 factor: factor MULOP . exponent

    IDENTIFIER    shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    exponent  go to state 81
    primary   go to state 46


State 66

   44 factor: factor REMOP . exponent

    IDENTIFIER    shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    exponent  go to state 82
    primary   go to state 46


State 67

   46 exponent: primary EXPOP . exponent

    IDENTIFIER    shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    exponent  go to state 83
    primary   go to state 46


State 68

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


State 69

    7 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 7 (variable)


State 70

   33 reductions: statement_ .

    $default  reduce using rule 33 (reductions)


State 71

   25 reduce_statement: REDUCE operator optional_reductions . ENDREDUCE

    ENDREDUCE  shift, and go to state 84


State 72

   31 optional_reductions: reductions .
   34 reductions: reductions . statement_

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    NOTOP         shift, and go to state 30
    REDUCE        shift, and go to state 31
    IF            shift, and go to state 32
    CASE          shift, and go to state 33
    '('           shift, and go to state 34

    ENDREDUCE  reduce using rule 31 (optional_reductions)

    statement_        go to state 85
    statement         go to state 36
    case_statement    go to state 37
    if_statement      go to state 38
    reduce_statement  go to state 39
    expression        go to state 40
    and_expression    go to state 41
    relation          go to state 42
    term              go to state 43
    factor            go to state 44
    exponent          go to state 45
    primary           go to state 46


State 73

   24 if_statement: IF expression THEN . statement_ ELSE statement_ ENDIF

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    NOTOP         shift, and go to state 30
    REDUCE        shift, and go to state 31
    IF            shift, and go to state 32
    CASE          shift, and go to state 33
    '('           shift, and go to state 34

    statement_        go to state 86
    statement         go to state 36
    case_statement    go to state 37
    if_statement      go to state 38
    reduce_statement  go to state 39
    expression        go to state 40
    and_expression    go to state 41
    relation          go to state 42
    term              go to state 43
    factor            go to state 44
    exponent          go to state 45
    primary           go to state 46


State 74

   23 case_statement: CASE expression IS . case_ OTHERS ARROW statement_ ENDCASE

    $default  reduce using rule 27 (case_)

    case_  go to state 87


State 75

   48 primary: '(' expression ')' .

    $default  reduce using rule 48 (primary)


State 76

   16 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 16 (body)


State 77

   35 expression: expression OROP and_expression .
   37 and_expression: and_expression . ANDOP relation

    ANDOP  shift, and go to state 62

    $default  reduce using rule 35 (expression)


State 78

   37 and_expression: and_expression ANDOP relation .
   39 relation: relation . RELOP term

    RELOP  shift, and go to state 63

    $default  reduce using rule 37 (and_expression)


State 79

   39 relation: relation RELOP term .
   41 term: term . ADDOP factor

    ADDOP  shift, and go to state 64

    $default  reduce using rule 39 (relation)


State 80

   41 term: term ADDOP factor .
   43 factor: factor . MULOP exponent
   44       | factor . REMOP exponent

    MULOP  shift, and go to state 65
    REMOP  shift, and go to state 66

    $default  reduce using rule 41 (term)


State 81

   43 factor: factor MULOP exponent .

    $default  reduce using rule 43 (factor)


State 82

   44 factor: factor REMOP exponent .

    $default  reduce using rule 44 (factor)


State 83

   46 exponent: primary EXPOP exponent .

    $default  reduce using rule 46 (exponent)


State 84

   25 reduce_statement: REDUCE operator optional_reductions ENDREDUCE .

    $default  reduce using rule 25 (reduce_statement)


State 85

   34 reductions: reductions statement_ .

    $default  reduce using rule 34 (reductions)


State 86

   24 if_statement: IF expression THEN statement_ . ELSE statement_ ENDIF

    ELSE  shift, and go to state 88


State 87

   23 case_statement: CASE expression IS case_ . OTHERS ARROW statement_ ENDCASE
   26 case_: case_ . case

    WHEN    shift, and go to state 89
    OTHERS  shift, and go to state 90

    case  go to state 91


State 88

   24 if_statement: IF expression THEN statement_ ELSE . statement_ ENDIF

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    NOTOP         shift, and go to state 30
    REDUCE        shift, and go to state 31
    IF            shift, and go to state 32
    CASE          shift, and go to state 33
    '('           shift, and go to state 34

    statement_        go to state 92
    statement         go to state 36
    case_statement    go to state 37
    if_statement      go to state 38
    reduce_statement  go to state 39
    expression        go to state 40
    and_expression    go to state 41
    relation          go to state 42
    term              go to state 43
    factor            go to state 44
    exponent          go to state 45
    primary           go to state 46


State 89

   28 case: WHEN . INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 93


State 90

   23 case_statement: CASE expression IS case_ OTHERS . ARROW statement_ ENDCASE

    ARROW  shift, and go to state 94


State 91

   26 case_: case_ case .

    $default  reduce using rule 26 (case_)


State 92

   24 if_statement: IF expression THEN statement_ ELSE statement_ . ENDIF

    ENDIF  shift, and go to state 95


State 93

   28 case: WHEN INT_LITERAL . ARROW statement_

    ARROW  shift, and go to state 96


State 94

   23 case_statement: CASE expression IS case_ OTHERS ARROW . statement_ ENDCASE

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    NOTOP         shift, and go to state 30
    REDUCE        shift, and go to state 31
    IF            shift, and go to state 32
    CASE          shift, and go to state 33
    '('           shift, and go to state 34

    statement_        go to state 97
    statement         go to state 36
    case_statement    go to state 37
    if_statement      go to state 38
    reduce_statement  go to state 39
    expression        go to state 40
    and_expression    go to state 41
    relation          go to state 42
    term              go to state 43
    factor            go to state 44
    exponent          go to state 45
    primary           go to state 46


State 95

   24 if_statement: IF expression THEN statement_ ELSE statement_ ENDIF .

    $default  reduce using rule 24 (if_statement)


State 96

   28 case: WHEN INT_LITERAL ARROW . statement_

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    NOTOP         shift, and go to state 30
    REDUCE        shift, and go to state 31
    IF            shift, and go to state 32
    CASE          shift, and go to state 33
    '('           shift, and go to state 34

    statement_        go to state 98
    statement         go to state 36
    case_statement    go to state 37
    if_statement      go to state 38
    reduce_statement  go to state 39
    expression        go to state 40
    and_expression    go to state 41
    relation          go to state 42
    term              go to state 43
    factor            go to state 44
    exponent          go to state 45
    primary           go to state 46


State 97

   23 case_statement: CASE expression IS case_ OTHERS ARROW statement_ . ENDCASE

    ENDCASE  shift, and go to state 99


State 98

   28 case: WHEN INT_LITERAL ARROW statement_ .

    $default  reduce using rule 28 (case)


State 99

   23 case_statement: CASE expression IS case_ OTHERS ARROW statement_ ENDCASE .

    $default  reduce using rule 23 (case_statement)
