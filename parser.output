Nonterminals useless in grammar

   optional_parameters
   parameter_
   parameter


Terminals unused in grammar

   ','


Rules useless in grammar

   51 optional_parameters: parameter_
   52                    | %empty

   53 parameter_: parameter
   54           | parameter_ ',' parameter

   55 parameter: IDENTIFIER ':' type


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';'

    3 optional_variable: variable_
    4                  | %empty

    5 variable_: variable
    6          | variable_ variable

    7 variable: IDENTIFIER ':' type IS statement_

    8 type: INTEGER
    9     | REAL
   10     | BOOLEAN

   11 body: BEGIN_ statement_ END ';'

   12 statement_: statement ';'
   13           | error ';'

   14 statement: expression
   15          | reduce_statement
   16          | if_statement
   17          | case_statement

   18 case_statement: CASE expression IS optional_case OTHERS ARROW statement_ ENDCASE

   19 if_statement: IF expression THEN statement_ ELSE statement_ ENDIF

   20 reduce_statement: REDUCE operator optional_reductions ENDREDUCE

   21 optional_case: case_
   22              | %empty

   23 case_: case
   24      | case_ case

   25 case: WHEN INT_LITERAL ARROW statement_

   26 operator: ADDOP
   27         | MULOP

   28 optional_reductions: reductions
   29                    | %empty

   30 reductions: statement_
   31           | reductions statement_

   32 expression: expression OROP and_expression
   33           | and_expression

   34 and_expression: and_expression ANDOP relation
   35               | relation

   36 relation: relation RELOP term
   37         | term

   38 term: term ADDOP factor
   39     | factor

   40 factor: factor MULOP exponent
   41       | factor REMOP exponent
   42       | exponent

   43 exponent: primary EXPOP exponent
   44         | primary

   45 primary: '(' expression ')'
   46        | NOTOP primary
   47        | INT_LITERAL
   48        | REAL_LITERAL
   49        | BOOL_LITERAL
   50        | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 45
')' (41) 45
',' (44)
':' (58) 7
';' (59) 2 11 12 13
error (256) 13
IDENTIFIER (258) 2 7 50
REAL_LITERAL (259) 48
BOOL_LITERAL (260) 49
INT_LITERAL (261) 25 47
ADDOP (262) 26 38
MULOP (263) 27 40
RELOP (264) 36
REMOP (265) 41
EXPOP (266) 43
ANDOP (267) 34
OROP (268) 32
NOTOP (269) 46
ARROW (270) 18 25
BEGIN_ (271) 11
BOOLEAN (272) 10
END (273) 11
ENDREDUCE (274) 20
FUNCTION (275) 2
INTEGER (276) 8
IS (277) 7 18
REDUCE (278) 20
RETURNS (279) 2
THEN (280) 19
WHEN (281) 25
REAL (282) 9
OTHERS (283) 18
IF (284) 19
ENDIF (285) 19
CASE (286) 18
ENDCASE (287) 18
ELSE (288) 19


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
function (40)
    on left: 1, on right: 0
function_header (41)
    on left: 2, on right: 1
optional_variable (42)
    on left: 3 4, on right: 1
variable_ (43)
    on left: 5 6, on right: 3 6
variable (44)
    on left: 7, on right: 5 6
type (45)
    on left: 8 9 10, on right: 2 7
body (46)
    on left: 11, on right: 1
statement_ (47)
    on left: 12 13, on right: 7 11 18 19 25 30 31
statement (48)
    on left: 14 15 16 17, on right: 12
case_statement (49)
    on left: 18, on right: 17
if_statement (50)
    on left: 19, on right: 16
reduce_statement (51)
    on left: 20, on right: 15
optional_case (52)
    on left: 21 22, on right: 18
case_ (53)
    on left: 23 24, on right: 21 24
case (54)
    on left: 25, on right: 23 24
operator (55)
    on left: 26 27, on right: 20
optional_reductions (56)
    on left: 28 29, on right: 20
reductions (57)
    on left: 30 31, on right: 28 31
expression (58)
    on left: 32 33, on right: 14 18 19 32 45
and_expression (59)
    on left: 34 35, on right: 32 33 34
relation (60)
    on left: 36 37, on right: 34 35 36
term (61)
    on left: 38 39, on right: 36 37 38
factor (62)
    on left: 40 41 42, on right: 38 39 40 41
exponent (63)
    on left: 43 44, on right: 40 41 42 43
primary (64)
    on left: 45 46 47 48 49 50, on right: 43 44 46


State 0

    0 $accept: . function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION . IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function . $end

    $end  shift, and go to state 5


State 3

    1 function: function_header . optional_variable body

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 4 (optional_variable)

    optional_variable  go to state 7
    variable_          go to state 8
    variable           go to state 9


State 4

    2 function_header: FUNCTION IDENTIFIER . RETURNS type ';'

    RETURNS  shift, and go to state 10


State 5

    0 $accept: function $end .

    $default  accept


State 6

    7 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 11


State 7

    1 function: function_header optional_variable . body

    BEGIN_  shift, and go to state 12

    body  go to state 13


State 8

    3 optional_variable: variable_ .
    6 variable_: variable_ . variable

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 3 (optional_variable)

    variable  go to state 14


State 9

    5 variable_: variable .

    $default  reduce using rule 5 (variable_)


State 10

    2 function_header: FUNCTION IDENTIFIER RETURNS . type ';'

    BOOLEAN  shift, and go to state 15
    INTEGER  shift, and go to state 16
    REAL     shift, and go to state 17

    type  go to state 18


State 11

    7 variable: IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 15
    INTEGER  shift, and go to state 16
    REAL     shift, and go to state 17

    type  go to state 19


State 12

   11 body: BEGIN_ . statement_ END ';'

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    IF            shift, and go to state 27
    CASE          shift, and go to state 28
    '('           shift, and go to state 29

    statement_        go to state 30
    statement         go to state 31
    case_statement    go to state 32
    if_statement      go to state 33
    reduce_statement  go to state 34
    expression        go to state 35
    and_expression    go to state 36
    relation          go to state 37
    term              go to state 38
    factor            go to state 39
    exponent          go to state 40
    primary           go to state 41


State 13

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


State 14

    6 variable_: variable_ variable .

    $default  reduce using rule 6 (variable_)


State 15

   10 type: BOOLEAN .

    $default  reduce using rule 10 (type)


State 16

    8 type: INTEGER .

    $default  reduce using rule 8 (type)


State 17

    9 type: REAL .

    $default  reduce using rule 9 (type)


State 18

    2 function_header: FUNCTION IDENTIFIER RETURNS type . ';'

    ';'  shift, and go to state 42


State 19

    7 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 43


State 20

   13 statement_: error . ';'

    ';'  shift, and go to state 44


State 21

   50 primary: IDENTIFIER .

    $default  reduce using rule 50 (primary)


State 22

   48 primary: REAL_LITERAL .

    $default  reduce using rule 48 (primary)


State 23

   49 primary: BOOL_LITERAL .

    $default  reduce using rule 49 (primary)


State 24

   47 primary: INT_LITERAL .

    $default  reduce using rule 47 (primary)


State 25

   46 primary: NOTOP . primary

    IDENTIFIER    shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 29

    primary  go to state 45


State 26

   20 reduce_statement: REDUCE . operator optional_reductions ENDREDUCE

    ADDOP  shift, and go to state 46
    MULOP  shift, and go to state 47

    operator  go to state 48


State 27

   19 if_statement: IF . expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 29

    expression      go to state 49
    and_expression  go to state 36
    relation        go to state 37
    term            go to state 38
    factor          go to state 39
    exponent        go to state 40
    primary         go to state 41


State 28

   18 case_statement: CASE . expression IS optional_case OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 29

    expression      go to state 50
    and_expression  go to state 36
    relation        go to state 37
    term            go to state 38
    factor          go to state 39
    exponent        go to state 40
    primary         go to state 41


State 29

   45 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 29

    expression      go to state 51
    and_expression  go to state 36
    relation        go to state 37
    term            go to state 38
    factor          go to state 39
    exponent        go to state 40
    primary         go to state 41


State 30

   11 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 52


State 31

   12 statement_: statement . ';'

    ';'  shift, and go to state 53


State 32

   17 statement: case_statement .

    $default  reduce using rule 17 (statement)


State 33

   16 statement: if_statement .

    $default  reduce using rule 16 (statement)


State 34

   15 statement: reduce_statement .

    $default  reduce using rule 15 (statement)


State 35

   14 statement: expression .
   32 expression: expression . OROP and_expression

    OROP  shift, and go to state 54

    $default  reduce using rule 14 (statement)


State 36

   33 expression: and_expression .
   34 and_expression: and_expression . ANDOP relation

    ANDOP  shift, and go to state 55

    $default  reduce using rule 33 (expression)


State 37

   35 and_expression: relation .
   36 relation: relation . RELOP term

    RELOP  shift, and go to state 56

    $default  reduce using rule 35 (and_expression)


State 38

   37 relation: term .
   38 term: term . ADDOP factor

    ADDOP  shift, and go to state 57

    $default  reduce using rule 37 (relation)


State 39

   39 term: factor .
   40 factor: factor . MULOP exponent
   41       | factor . REMOP exponent

    MULOP  shift, and go to state 58
    REMOP  shift, and go to state 59

    $default  reduce using rule 39 (term)


State 40

   42 factor: exponent .

    $default  reduce using rule 42 (factor)


State 41

   43 exponent: primary . EXPOP exponent
   44         | primary .

    EXPOP  shift, and go to state 60

    $default  reduce using rule 44 (exponent)


State 42

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


State 43

    7 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    IF            shift, and go to state 27
    CASE          shift, and go to state 28
    '('           shift, and go to state 29

    statement_        go to state 61
    statement         go to state 31
    case_statement    go to state 32
    if_statement      go to state 33
    reduce_statement  go to state 34
    expression        go to state 35
    and_expression    go to state 36
    relation          go to state 37
    term              go to state 38
    factor            go to state 39
    exponent          go to state 40
    primary           go to state 41


State 44

   13 statement_: error ';' .

    $default  reduce using rule 13 (statement_)


State 45

   46 primary: NOTOP primary .

    $default  reduce using rule 46 (primary)


State 46

   26 operator: ADDOP .

    $default  reduce using rule 26 (operator)


State 47

   27 operator: MULOP .

    $default  reduce using rule 27 (operator)


State 48

   20 reduce_statement: REDUCE operator . optional_reductions ENDREDUCE

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    IF            shift, and go to state 27
    CASE          shift, and go to state 28
    '('           shift, and go to state 29

    ENDREDUCE  reduce using rule 29 (optional_reductions)

    statement_           go to state 62
    statement            go to state 31
    case_statement       go to state 32
    if_statement         go to state 33
    reduce_statement     go to state 34
    optional_reductions  go to state 63
    reductions           go to state 64
    expression           go to state 35
    and_expression       go to state 36
    relation             go to state 37
    term                 go to state 38
    factor               go to state 39
    exponent             go to state 40
    primary              go to state 41


State 49

   19 if_statement: IF expression . THEN statement_ ELSE statement_ ENDIF
   32 expression: expression . OROP and_expression

    OROP  shift, and go to state 54
    THEN  shift, and go to state 65


State 50

   18 case_statement: CASE expression . IS optional_case OTHERS ARROW statement_ ENDCASE
   32 expression: expression . OROP and_expression

    OROP  shift, and go to state 54
    IS    shift, and go to state 66


State 51

   32 expression: expression . OROP and_expression
   45 primary: '(' expression . ')'

    OROP  shift, and go to state 54
    ')'   shift, and go to state 67


State 52

   11 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 68


State 53

   12 statement_: statement ';' .

    $default  reduce using rule 12 (statement_)


State 54

   32 expression: expression OROP . and_expression

    IDENTIFIER    shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 29

    and_expression  go to state 69
    relation        go to state 37
    term            go to state 38
    factor          go to state 39
    exponent        go to state 40
    primary         go to state 41


State 55

   34 and_expression: and_expression ANDOP . relation

    IDENTIFIER    shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 29

    relation  go to state 70
    term      go to state 38
    factor    go to state 39
    exponent  go to state 40
    primary   go to state 41


State 56

   36 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 29

    term      go to state 71
    factor    go to state 39
    exponent  go to state 40
    primary   go to state 41


State 57

   38 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 29

    factor    go to state 72
    exponent  go to state 40
    primary   go to state 41


State 58

   40 factor: factor MULOP . exponent

    IDENTIFIER    shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 29

    exponent  go to state 73
    primary   go to state 41


State 59

   41 factor: factor REMOP . exponent

    IDENTIFIER    shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 29

    exponent  go to state 74
    primary   go to state 41


State 60

   43 exponent: primary EXPOP . exponent

    IDENTIFIER    shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 29

    exponent  go to state 75
    primary   go to state 41


State 61

    7 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 7 (variable)


State 62

   30 reductions: statement_ .

    $default  reduce using rule 30 (reductions)


State 63

   20 reduce_statement: REDUCE operator optional_reductions . ENDREDUCE

    ENDREDUCE  shift, and go to state 76


State 64

   28 optional_reductions: reductions .
   31 reductions: reductions . statement_

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    IF            shift, and go to state 27
    CASE          shift, and go to state 28
    '('           shift, and go to state 29

    ENDREDUCE  reduce using rule 28 (optional_reductions)

    statement_        go to state 77
    statement         go to state 31
    case_statement    go to state 32
    if_statement      go to state 33
    reduce_statement  go to state 34
    expression        go to state 35
    and_expression    go to state 36
    relation          go to state 37
    term              go to state 38
    factor            go to state 39
    exponent          go to state 40
    primary           go to state 41


State 65

   19 if_statement: IF expression THEN . statement_ ELSE statement_ ENDIF

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    IF            shift, and go to state 27
    CASE          shift, and go to state 28
    '('           shift, and go to state 29

    statement_        go to state 78
    statement         go to state 31
    case_statement    go to state 32
    if_statement      go to state 33
    reduce_statement  go to state 34
    expression        go to state 35
    and_expression    go to state 36
    relation          go to state 37
    term              go to state 38
    factor            go to state 39
    exponent          go to state 40
    primary           go to state 41


State 66

   18 case_statement: CASE expression IS . optional_case OTHERS ARROW statement_ ENDCASE

    WHEN  shift, and go to state 79

    $default  reduce using rule 22 (optional_case)

    optional_case  go to state 80
    case_          go to state 81
    case           go to state 82


State 67

   45 primary: '(' expression ')' .

    $default  reduce using rule 45 (primary)


State 68

   11 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 11 (body)


State 69

   32 expression: expression OROP and_expression .
   34 and_expression: and_expression . ANDOP relation

    ANDOP  shift, and go to state 55

    $default  reduce using rule 32 (expression)


State 70

   34 and_expression: and_expression ANDOP relation .
   36 relation: relation . RELOP term

    RELOP  shift, and go to state 56

    $default  reduce using rule 34 (and_expression)


State 71

   36 relation: relation RELOP term .
   38 term: term . ADDOP factor

    ADDOP  shift, and go to state 57

    $default  reduce using rule 36 (relation)


State 72

   38 term: term ADDOP factor .
   40 factor: factor . MULOP exponent
   41       | factor . REMOP exponent

    MULOP  shift, and go to state 58
    REMOP  shift, and go to state 59

    $default  reduce using rule 38 (term)


State 73

   40 factor: factor MULOP exponent .

    $default  reduce using rule 40 (factor)


State 74

   41 factor: factor REMOP exponent .

    $default  reduce using rule 41 (factor)


State 75

   43 exponent: primary EXPOP exponent .

    $default  reduce using rule 43 (exponent)


State 76

   20 reduce_statement: REDUCE operator optional_reductions ENDREDUCE .

    $default  reduce using rule 20 (reduce_statement)


State 77

   31 reductions: reductions statement_ .

    $default  reduce using rule 31 (reductions)


State 78

   19 if_statement: IF expression THEN statement_ . ELSE statement_ ENDIF

    ELSE  shift, and go to state 83


State 79

   25 case: WHEN . INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 84


State 80

   18 case_statement: CASE expression IS optional_case . OTHERS ARROW statement_ ENDCASE

    OTHERS  shift, and go to state 85


State 81

   21 optional_case: case_ .
   24 case_: case_ . case

    WHEN  shift, and go to state 79

    $default  reduce using rule 21 (optional_case)

    case  go to state 86


State 82

   23 case_: case .

    $default  reduce using rule 23 (case_)


State 83

   19 if_statement: IF expression THEN statement_ ELSE . statement_ ENDIF

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    IF            shift, and go to state 27
    CASE          shift, and go to state 28
    '('           shift, and go to state 29

    statement_        go to state 87
    statement         go to state 31
    case_statement    go to state 32
    if_statement      go to state 33
    reduce_statement  go to state 34
    expression        go to state 35
    and_expression    go to state 36
    relation          go to state 37
    term              go to state 38
    factor            go to state 39
    exponent          go to state 40
    primary           go to state 41


State 84

   25 case: WHEN INT_LITERAL . ARROW statement_

    ARROW  shift, and go to state 88


State 85

   18 case_statement: CASE expression IS optional_case OTHERS . ARROW statement_ ENDCASE

    ARROW  shift, and go to state 89


State 86

   24 case_: case_ case .

    $default  reduce using rule 24 (case_)


State 87

   19 if_statement: IF expression THEN statement_ ELSE statement_ . ENDIF

    ENDIF  shift, and go to state 90


State 88

   25 case: WHEN INT_LITERAL ARROW . statement_

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    IF            shift, and go to state 27
    CASE          shift, and go to state 28
    '('           shift, and go to state 29

    statement_        go to state 91
    statement         go to state 31
    case_statement    go to state 32
    if_statement      go to state 33
    reduce_statement  go to state 34
    expression        go to state 35
    and_expression    go to state 36
    relation          go to state 37
    term              go to state 38
    factor            go to state 39
    exponent          go to state 40
    primary           go to state 41


State 89

   18 case_statement: CASE expression IS optional_case OTHERS ARROW . statement_ ENDCASE

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    IF            shift, and go to state 27
    CASE          shift, and go to state 28
    '('           shift, and go to state 29

    statement_        go to state 92
    statement         go to state 31
    case_statement    go to state 32
    if_statement      go to state 33
    reduce_statement  go to state 34
    expression        go to state 35
    and_expression    go to state 36
    relation          go to state 37
    term              go to state 38
    factor            go to state 39
    exponent          go to state 40
    primary           go to state 41


State 90

   19 if_statement: IF expression THEN statement_ ELSE statement_ ENDIF .

    $default  reduce using rule 19 (if_statement)


State 91

   25 case: WHEN INT_LITERAL ARROW statement_ .

    $default  reduce using rule 25 (case)


State 92

   18 case_statement: CASE expression IS optional_case OTHERS ARROW statement_ . ENDCASE

    ENDCASE  shift, and go to state 93


State 93

   18 case_statement: CASE expression IS optional_case OTHERS ARROW statement_ ENDCASE .

    $default  reduce using rule 18 (case_statement)
